# Az alább kommentezett Python kód tartalmazza a Magyar Óra pszeudokódját. A kommentek hivatottak a dokumentáció szerepét betölteni. 
# FIGYELEM: A kód nem bolondbiztos ( csak a valóságban is szereplő értékeket kaphat ).
# HASZNÁLATI ÚTMUTATÁS: A felhasználó először az aktuális órát kell megadja. Beírja a számot, utána Entert nyom. Ezután a rendszer az aktuális percet fogja kérni. Szintén beírja a számot a felhasználó és szintén Entert nyom.
# A Magyar Óra működésének az alapja, hogy az analóg kijelzős órák esetén a mutatók mindig diszkrét értékekre mutatnak.
# Az alábbi kód hivatott megmutatni, hogy milyen értéket vehet és vesz fel a nagymutató és a kismutató a Magyar Óránál ( az analóg kijelzős órák esetén ).
# A Magyar Óránál ugyanúgy veszi fel az értékeket a másodpercért felelős mutató, mint az "eddigi általános" esetben ( ha van ), ezért azzal nem foglalkozok a továbbiakban.
kismutato = [1,2,3,4,5,6,7,8,9,10,11,12] # Kismutató állása lehet analóg kijelzős óra esetén ( ugyanúgy mint az "eddigi általános" esetben ).
nagymutato = [1,2,3,4,5,6,7,8,9,10,11,12] # Nagymutató állása lehet analóg kijelzős óra esetén ( ugyanúgy mint az "eddigi általános" esetben ).
szamok_kozotti_kispottyok = [1,2,3,4] # Itt az egyes számok ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 ) közötti kis pöttyökre kell - analóg óra esetén - gondolni, amikből 4 (négy) darab van, összesen 48 ( ugyanúgy mint az "eddigi általános" esetben ), amikre a kismutató mutathat még.
# ..vagyis a Magyar Óra működésének az alapja, hogy az óra mutatásáért felelős kismutató az analóg kijelzős órák esetén szereplő 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 számok mellett a kis pöttyökre is mutathat.

while( True ): # Végtelen ciklusba lép a kód, hogy ne csak egyszer lehessen megadni az időt.
    print( "Adja meg hány óra van!" ) # Az aposztrófok közé zárt üzenetet írja ki a kód.
    kismutato_allasa_ami_az_aktualis_ora = int( input() ) # Itt a felhasználótól bekéri a kód az aktuális óraállást.
    print( "Adja meg hány perc van!" ) # Az aposztrófok közé zárt üzenetet írja ki a kód.
    nagymutato_allasa_ami_az_aktualis_perc = int( input() ) # Itt a felhasználótól bekéri a kód az aktuális percállást.

    if kismutato_allasa_ami_az_aktualis_ora > 12: # Itt megvizsgálja a kód, hogy a kismutató, ami az órát mutatja 12-nél nagyobb értéket kapott-e? Ha igen, belelép az elágazásba.
        kismutato_allasa_ami_az_aktualis_ora -= 12 # Itt az eddigi általános analóg kijelzős óra szabályai szerint jár el a kód azaz, ha nagyobb az érték, mint 12, akkor kivon belőle 12-őt ( 12-nél nagyobb érték nincs az analóg kijelzős órákon ).
    
    if kismutato_allasa_ami_az_aktualis_ora == 0: # Itt megvizsgálja a kód, hogy a kismutató, ami az órát mutatja 0 értéket kapott-e? Ha igen, belelép az elágazásba.
        kismutato_allasa_ami_az_aktualis_ora = 12 # Itt az eddigi általános analóg kijelzős óra szabályai szerint jár el a kód azaz, ha 0 az érték, akkor 12 lesz ( 0 nincs az analóg kijelzős órákon ).

    if nagymutato_allasa_ami_az_aktualis_perc == 0: # Itt megvizsgálja a kód, hogy 0 percnél van-e az óraállás az adott időben? Ha igen, belelép az elágazásba.
        print( "Kismutató a " + str( kismutato_allasa_ami_az_aktualis_ora ) + " számra mutat tehát, nem kis pöttyre, ez azt mutatja ugyanis, hogy 12 perc még nem telt el az órából." ) # A lényeg, hogy a kismutató a kis pöttyökre is mutathat a 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 értékek mellett. Az első kispöttyre 12 perc után, a másodikra 24 perc után, a harmadikra 36 perc után, a negyedikre 48 perc után fog mutatni a kismutató. Ezután a következő számra, vagyis 12 utáni negyedik kispötty után 1, majd 1 utáni első kispötty, 1 utáni második kispötty stb.
        print( "Nagymutató a 12 számra mutat 0 perc eltelte után, tehát a meglévőből mindig kivonjuk, ami eltelt, de ez most egy kivétel. Jelen esetben most a 0-át kellene ábrázolnunk: " + str( nagymutato_allasa_ami_az_aktualis_perc ) + " - 0 = 12 ( 0 nincs az órákon )." ) # A nagymutató mindig a 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 értékek valamelyikére mutasson.

    elif nagymutato_allasa_ami_az_aktualis_perc > 0 and nagymutato_allasa_ami_az_aktualis_perc < 12: # Itt megvizsgálja a kód, hogy 0 és 12 perc között ( 0 és 12 sem lehet! ) van-e az óraállás az adott időben? Ha igen, belelép az elágazásba.
        print( "Kismutató a " + str( kismutato_allasa_ami_az_aktualis_ora ) + " számra mutat tehát, nem kis pöttyre, ez azt mutatja ugyanis, hogy 12 perc még nem telt el az órából." ) # A lényeg, hogy a kismutató a kis pöttyökre is mutathat a 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 értékek mellett. Az első kispöttyre 12 perc után, a másodikra 24 perc után, a harmadikra 36 perc után, a negyedikre 48 perc után fog mutatni a kismutató. Ezután a következő számra, vagyis 12 utáni negyedik kispötty után 1, majd 1 utáni első kispötty, 1 utáni második kispötty stb.
        print( "Nagymutató a " + str( nagymutato_allasa_ami_az_aktualis_perc % 12 ) + " számra mutat 0 perc eltelte után, tehát a meglévőből mindig kivonjuk, ami eltelt, jelen esetben most a 0-át: " + str( nagymutato_allasa_ami_az_aktualis_perc ) + " - 0 = " + str( nagymutato_allasa_ami_az_aktualis_perc % 12 ) + "." ) # A nagymutató mindig a 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 értékek valamelyikére mutasson.

    elif nagymutato_allasa_ami_az_aktualis_perc == 12: # Itt megvizsgálja a kód, hogy 12 percnél van-e az óraállás az adott időben? Ha igen, belelép az elágazásba.
        print( "Kismutató a " + str( kismutato_allasa_ami_az_aktualis_ora ) + " szám utáni " + str( szamok_kozotti_kispottyok[0] ) + ". kis pöttyre mutat tehát, ami az aktuális óra utáni első kispötty, ez azt mutatja ugyanis, hogy 12 perc eltelt már az órából." ) # A lényeg, hogy a kismutató a kis pöttyökre is mutathat a 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 értékek mellett. Az első kispöttyre 12 perc után, a másodikra 24 perc után, a harmadikra 36 perc után, a negyedikre 48 perc után fog mutatni a kismutató. Ezután a következő számra, vagyis 12 utáni negyedik kispötty után 1, majd 1 utáni első kispötty, 1 utáni második kispötty stb.
        print( "Nagymutató a 12 számra mutat 12 perc eltelte után, tehát a meglévőből mindig kivonjuk, ami eltelt, de ez most egy kivétel. Jelen esetben most a 0-át kellene ábrázolnunk: " + str( nagymutato_allasa_ami_az_aktualis_perc ) + " - 12 = 12 ( 0 nincs az órákon )." ) # A nagymutató mindig a 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 értékek valamelyikére mutasson.

    elif nagymutato_allasa_ami_az_aktualis_perc > 12 and nagymutato_allasa_ami_az_aktualis_perc < 24: # Itt megvizsgálja a kód, hogy 12 és 24 perc között ( 12 és 24 sem lehet! ) van-e az óraállás az adott időben? Ha igen, belelép az elágazásba.
        print( "Kismutató a " + str( kismutato_allasa_ami_az_aktualis_ora ) + " szám utáni " + str( szamok_kozotti_kispottyok[0] ) + ". kis pöttyre mutat tehát, ami az aktuális óra utáni első kispötty, ez azt mutatja ugyanis, hogy 12 perc eltelt már az órából." ) # A lényeg, hogy a kismutató a kis pöttyökre is mutathat a 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 értékek mellett. Az első kispöttyre 12 perc után, a másodikra 24 perc után, a harmadikra 36 perc után, a negyedikre 48 perc után fog mutatni a kismutató. Ezután a következő számra, vagyis 12 utáni negyedik kispötty után 1, majd 1 utáni első kispötty, 1 utáni második kispötty stb.
        print( "Nagymutató a " + str( nagymutato_allasa_ami_az_aktualis_perc % 12 ) + " számra mutat 12 perc eltelte után, tehát a meglévőből mindig kivonjuk, ami eltelt, jelen esetben most a 12-őt: " + str( nagymutato_allasa_ami_az_aktualis_perc ) + " - 12 = " + str( nagymutato_allasa_ami_az_aktualis_perc % 12 ) + "." ) # A nagymutató mindig a 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 értékek valamelyikére mutasson.

    elif nagymutato_allasa_ami_az_aktualis_perc == 24: # Itt megvizsgálja a kód, hogy 24 percnél van-e az óraállás az adott időben? Ha igen, belelép az elágazásba.
        print( "Kismutató a " + str( kismutato_allasa_ami_az_aktualis_ora ) + " szám utáni " + str( szamok_kozotti_kispottyok[1] ) + ". kis pöttyre mutat tehát, ami az aktuális óra utáni második kispötty, ez azt mutatja ugyanis, hogy 24 perc eltelt már az órából." ) # A lényeg, hogy a kismutató a kis pöttyökre is mutathat a 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 értékek mellett. Az első kispöttyre 12 perc után, a másodikra 24 perc után, a harmadikra 36 perc után, a negyedikre 48 perc után fog mutatni a kismutató. Ezután a következő számra, vagyis 12 utáni negyedik kispötty után 1, majd 1 utáni első kispötty, 1 utáni második kispötty stb.
        print( "Nagymutató a 12 számra mutat 24 perc eltelte után, tehát a meglévőből mindig kivonjuk, ami eltelt, de ez most egy kivétel. Jelen esetben most a 0-át kellene ábrázolnunk: " + str( nagymutato_allasa_ami_az_aktualis_perc ) + " - 24 = 12 ( 0 nincs az órákon )." ) # A nagymutató mindig a 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 értékek valamelyikére mutasson.

    elif nagymutato_allasa_ami_az_aktualis_perc > 24 and nagymutato_allasa_ami_az_aktualis_perc < 36: # Itt megvizsgálja a kód, hogy 24 és 36 perc között ( 24 és 36 sem lehet! ) van-e az óraállás az adott időben? Ha igen, belelép az elágazásba.
        print( "Kismutató a " + str( kismutato_allasa_ami_az_aktualis_ora ) + " szám utáni " + str( szamok_kozotti_kispottyok[1] ) + ". kis pöttyre mutat tehát, ami az aktuális óra utáni második kispötty, ez azt mutatja ugyanis, hogy 24 perc eltelt már az órából." ) # A lényeg, hogy a kismutató a kis pöttyökre is mutathat a 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 értékek mellett. Az első kispöttyre 12 perc után, a másodikra 24 perc után, a harmadikra 36 perc után, a negyedikre 48 perc után fog mutatni a kismutató. Ezután a következő számra, vagyis 12 utáni negyedik kispötty után 1, majd 1 utáni első kispötty, 1 utáni második kispötty stb.
        print( "Nagymutató a " + str( nagymutato_allasa_ami_az_aktualis_perc % 12 ) + " számra mutat 24 perc eltelte után, tehát a meglévőből mindig kivonjuk, ami eltelt, jelen esetben most a 24-et: " + str( nagymutato_allasa_ami_az_aktualis_perc ) + " - 24 = " + str( nagymutato_allasa_ami_az_aktualis_perc % 12 ) + "." ) # A nagymutató mindig a 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 értékek valamelyikére mutasson.

    elif nagymutato_allasa_ami_az_aktualis_perc == 36: # Itt megvizsgálja a kód, hogy 36 percnél van-e az óraállás az adott időben? Ha igen, belelép az elágazásba.
        print( "Kismutató a " + str( kismutato_allasa_ami_az_aktualis_ora ) + " szám utáni " + str( szamok_kozotti_kispottyok[2] ) + ". kis pöttyre mutat tehát, ami az aktuális óra utáni harmadik kispötty, ez azt mutatja ugyanis, hogy 36 perc eltelt már az órából." ) # A lényeg, hogy a kismutató a kis pöttyökre is mutathat a 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 értékek mellett. Az első kispöttyre 12 perc után, a másodikra 24 perc után, a harmadikra 36 perc után, a negyedikre 48 perc után fog mutatni a kismutató. Ezután a következő számra, vagyis 12 utáni negyedik kispötty után 1, majd 1 utáni első kispötty, 1 utáni második kispötty stb.
        print( "Nagymutató szintén a 12 számra mutat 36 perc eltelte után, tehát a meglévőből mindig kivonjuk, ami eltelt, de ez most egy kivétel. Jelen esetben most a 0-át kellene ábrázolnunk: " + str( nagymutato_allasa_ami_az_aktualis_perc ) + " - 36 = 12 ( 0 nincs az órákon )." ) # A nagymutató mindig a 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 értékek valamelyikére mutasson.

    elif nagymutato_allasa_ami_az_aktualis_perc > 36 and nagymutato_allasa_ami_az_aktualis_perc < 48: # Itt megvizsgálja a kód, hogy 36 és 48 perc között ( 36 és 48 sem lehet! ) van-e az óraállás az adott időben? Ha igen, belelép az elágazásba.
        print( "Kismutató a " + str( kismutato_allasa_ami_az_aktualis_ora ) + " szám utáni " + str( szamok_kozotti_kispottyok[2] ) + ". kis pöttyre mutat tehát, ami az aktuális óra utáni harmadik kispötty, ez azt mutatja ugyanis, hogy 36 perc eltelt már az órából." ) # A lényeg, hogy a kismutató a kis pöttyökre is mutathat a 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 értékek mellett. Az első kispöttyre 12 perc után, a másodikra 24 perc után, a harmadikra 36 perc után, a negyedikre 48 perc után fog mutatni a kismutató. Ezután a következő számra, vagyis 12 utáni negyedik kispötty után 1, majd 1 utáni első kispötty, 1 utáni második kispötty stb.
        print( "Nagymutató a " + str( nagymutato_allasa_ami_az_aktualis_perc % 12 ) + " számra mutat 36 perc eltelte után, tehát a meglévőből mindig kivonjuk, ami eltelt, jelen esetben most a 36-ot: " + str( nagymutato_allasa_ami_az_aktualis_perc ) + " - 36 = " + str( nagymutato_allasa_ami_az_aktualis_perc % 12 ) + "." ) # A nagymutató mindig a 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 értékek valamelyikére mutasson.

    elif nagymutato_allasa_ami_az_aktualis_perc == 48: # Itt megvizsgálja a kód, hogy 48 percnél van-e az óraállás az adott időben? Ha igen, belelép az elágazásba.
        print( "Kismutató a " + str( kismutato_allasa_ami_az_aktualis_ora ) + " szám utáni " + str( szamok_kozotti_kispottyok[3] ) + ". kis pöttyre mutat tehát, ami az aktuális óra utáni negyedik kispötty, ez azt mutatja ugyanis, hogy 48 perc eltelt már az órából." ) # A lényeg, hogy a kismutató a kis pöttyökre is mutathat a 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 értékek mellett. Az első kispöttyre 12 perc után, a másodikra 24 perc után, a harmadikra 36 perc után, a negyedikre 48 perc után fog mutatni a kismutató. Ezután a következő számra, vagyis 12 utáni negyedik kispötty után 1, majd 1 utáni első kispötty, 1 utáni második kispötty stb.
        print( "Nagymutató a 12 számra mutat 48 perc eltelte után, tehát a meglévőből mindig kivonjuk, ami eltelt, de ez most egy kivétel. Jelen esetben most a 0-át kellene ábrázolnunk: " + str( nagymutato_allasa_ami_az_aktualis_perc ) + " - 48 = 12 ( 0 nincs az órákon )." ) # A nagymutató mindig a 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 értékek valamelyikére mutasson.

    elif nagymutato_allasa_ami_az_aktualis_perc > 48 and nagymutato_allasa_ami_az_aktualis_perc < 60: # Itt megvizsgálja a kód, hogy 48 és 60 perc között ( 48 és 60 sem lehet! ) van-e az óraállás az adott időben? Ha igen, belelép az elágazásba.
        print( "Kismutató a " + str( kismutato_allasa_ami_az_aktualis_ora ) + " szám utáni " + str( szamok_kozotti_kispottyok[3] ) + ". kis pöttyre mutat tehát, ami az aktuális óra utáni negyedik kispötty, ez azt mutatja ugyanis, hogy 48 perc eltelt már az órából." ) # A lényeg, hogy a kismutató a kis pöttyökre is mutathat a 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 értékek mellett. Az első kispöttyre 12 perc után, a másodikra 24 perc után, a harmadikra 36 perc után, a negyedikre 48 perc után fog mutatni a kismutató. Ezután a következő számra, vagyis 12 utáni negyedik kispötty után 1, majd 1 utáni első kispötty, 1 utáni második kispötty stb.
        print( "Nagymutató a " + str( nagymutato_allasa_ami_az_aktualis_perc % 12 ) + " számra mutat 48 perc eltelte után, tehát a meglévőből mindig kivonjuk, ami eltelt " + str( nagymutato_allasa_ami_az_aktualis_perc ) + " - 48 = " + str( nagymutato_allasa_ami_az_aktualis_perc % 12 ) + "." ) # A nagymutató mindig a 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 értékek valamelyikére mutasson.
